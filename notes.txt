GIT NOTES:

    -version control allows you to rollback updates and keep track of how files have changed over the course of a project
    -a centralized version control system is a central server that several devs can pull old or current files from
    -a local version control system is a local database of timestamped versions of a project stored on drive
    -a distributed version control system is another online database, but they hold full mirrors of projects, so they can be cloned anywhere
    -git is a distributed version control system
    -to set a local default git branch to main, run:
        <git config --global init.defaultBranch main>
    -use <git add .> to add all files in a current directory to the staging location before a push
    -use <git status> to check what files are ready to be pushed
    -use <git commit -m "Enter push notes here"> to finalize changes to the push
    -use <git push> to push all commited changes to a repo
    -use <git clone <repo link>> to clone a repo
    -use <git log> to get a log of push history to a repo
    
HTML NOTES:

    -HTML stands for Hypertext Markup Language
    -HTML elements are pieces of content wrapped in tags
    -elements have opening and closing tabs, eg:
        <p> This is text inside of a paragraph tag </p>
    -not all elements have closing tabs, such as <br /> or <img />. these are self closing tags, containing all the content in just one tag.
    -HTML needs a doctype tag to start, eg:
        <!DOCTYPE html>
    -all content in an html file is wrapped in an <html> tag, with a closing </html>
    -use the vscode browser extention "HTML CSS Support" to do all this boilerplate
    -HTML documents are composed of a <head> section and <body> section within the HTML tag
    -all displayed content will be in the body of the document

    HTML TAGS:
        -<title> tags are for editing the text in a browser tab on your site. These go in the head.
        -<h1> tags are for creating headings, large title texts. They can be sized up or down by changing the number in the tag.
        -<p> tags are for creating paragraphs
        -<strong> is a tag you can throw around specific pieces of text to make them bold
        -<em> is a tag for text to italicise it
        -to comment in html, use <!-- Comment Here -->
        -use CTRL + / to shortcut a comment
        -<ul> tags are for creating unordered lists, they are tags that go around <li>, which stands for list item.
        -<ol> are ordered lists, for creating lists where the order matters. These also use <li>.
        -<a> tags are anchor tags for making text clickable to open a link
        -you can add attributes to tags in the opening tag, for <a> links, you can add 
            <a href="linkhere.com">Click me</a>
        -the <img> tag is for adding images to a page, this is a self closing element




CSS NOTES:

    -CSS stands for Cascading Style Sheets
    -To grab a class in a CSS file, use a (.) before the class name
    -to grab an ID in a CSS file, use a (#) before the ID name
    -ID beats class in ordee of operations
    -Every element on a webpage is in a box, so using flex or box displays is an easy way to manage content layout.
        -margin is the property of an element that determines its position in relation to other elements
        -padding is the property of an element that determines the position of content inside of an element
        -border adds space between the margin and padding, and allows a visible outline to appear on elements.
    -flexbox is a more modern and ised way to organize elements in a webpage
        -with flex, you can create flex-containers with flex items inside of them, and move them around as needed.
        -you can also nest flex containers inside of each other
        -use flex display on a container, and use a flex:1 preset for the items to keep sizing easy
        -use flex-direction to change containers from columns to rows, horizontal or vertical
        -justify-content is the easiest way to change position of flex items inside of flex containers; also try align-items for cross axis
        -the gap attribute will help space out flex items inside of containers
        -
